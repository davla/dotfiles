{#@@
    This macro injects some graphical-session-specific content in its output.
    This "compile-time" computation of values has been favored over run-time
    computation for efficiency reasons, since this script would be run at each
    graphical session startup.
@@#}
{%@@ macro systemd_graphical_session(
    env_list,
    xdg_current_desktop,
    xdg_session_type,
    target='%s-session.target' % xdg_current_desktop
) -@@%}

#!/usr/bin/env sh

# This script sets up/tears down systemd graphical sessions. This mostly
# includes importing/unsetting environment variables and starting/stopping
# systemd targets
#
# Arguments:
# - $1: one of (case insensitive):
#       'up' - sets up the session
#       'down' - tears down the session
#
# {{@@ header() @@}}

########################################
# Variables
########################################

export XDG_CURRENT_DESKTOP='{{@@ xdg_current_desktop @@}}'
export XDG_SESSION_TYPE='{{@@ xdg_session_type @@}}'
ENV_LIST='{{@@ env_list @@}} XDG_CURRENT_DESKTOP XDG_SESSION_TYPE TERMINAL'
TARGET='{{@@ target @@}}'

########################################
# Input processing
########################################

ACTION="$(echo "$1" | tr '[:upper:]' '[:lower:]')"

########################################
# Performing action
########################################

case "$ACTION" in
    'up')
        # ENV_LIST is not quoted because we need word splitting
        # shellcheck disable=2086
        {
            systemctl --user import-environment $ENV_LIST
            hash dbus-update-activation-environment 2>/dev/null \
                && dbus-update-activation-environment --systemd $ENV_LIST
        }
        systemctl --user start "$TARGET"
        ;;

    'down')
        systemctl --user stop "$TARGET"
        # ENV_LIST is not quoted because we need word splitting
        # shellcheck disable=2086
        systemctl --user unset-environment $ENV_LIST
        ;;

    *)
        echo >&2 "Invalid argument: $1"
        exit 127
        ;;
esac

{%@@- endmacro @@%}
