actions:
  pre:
    strip_range: >
      sed -i -E '/{0}/,/{1}/ {{
          /{0}/n
          /{1}/ ! {{
            d
          }}
        }}' {2}
    strip_file: >
      START="$(head -n 1 {0} | xargs -i grep -nFm 1 '{{}}' {1} \
          | cut -d ':' -f 1)";
      END="$(nl -b a -w 1 -s ' ' {1} | tac | grep -Fm 1 "$(tail -n 1 {0})" \
          | cut -d ' ' -f 1)";
      if [ -n "$START" ] && [ -n "$END" ]; then
          sed -i "$START,$END d" {1}
      fi
    strip_xml: >-
      python -c "
        import xml.etree.ElementTree as ET

        with open('{1}', 'r') as f:
            document = ET.parse(f)

        parent = document.find("{0}/..")
        if parent is not None:
          target = parent.find("{0}")
          parent.remove(target)
          document.write('{1}', encoding='UTF-8', xml_declaration=True)"
  post:
    insert_match: "sed -i -E '/{0}/ r {1}' {2}"
    insert_match_once: >
      LINE="$(grep -nPm 1 '{0}' {2} | cut -d ':' -f 1)";
      [ -z "$LINE" ] && LINE="$(wc -l < {2})";
      sed -i "$LINE r {1}" {2}
    insert_xml: >-
      python -c "
        import xml.etree.ElementTree as ET

        with open('{1}', 'r') as source, open('{2}', 'r') as dest:
            source_document = ET.parse(source)
            dest_document = ET.parse(dest)

        node = source_document.find('.')
        parent = dest_document.find("{0}/..")
        target = parent.find("{0}")

        index = next(
            index
            for index, child in enumerate(parent)
            if child == target
        )
        parent.insert(index + 1, node)
        document.write('{2}', encoding='UTF-8', xml_declaration=True)"
    rm: rm -f {0}
