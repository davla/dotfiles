actions:
  post:
    insert_match: |-
      LINE="$(grep -nPm 1 '{0}' {2} | cut -d ':' -f 1)"
      [ -z "$LINE" ] && LINE="$(wc -l < {2})"
      sed -i "$LINE r {1}" {2}
    insert_xml: |-
      python -i <<EOF
      import xml.etree.ElementTree as ET

      with open('{1}', 'r') as source, open('{2}', 'r') as dest:
          source_document = ET.parse(source)
          dest_document = ET.parse(dest)

      node = source_document.find('.')
      parent = dest_document.find("{0}/..")
      target = parent.find("{0}")

      index = next(
          index
          for index, child in enumerate(parent)
          if child == target
      )
      parent.insert(index + 1, node)
      dest_document.write('{2}', encoding='UTF-8', xml_declaration=True)
      EOF
    rm: rm -f {0}
    strip_file: |-
      START="$(head -n 1 {0} | xargs -i grep -nFm 1 '{{}}' {1} \
         | cut -d ':' -f 1)"
      END="$(nl -b a -w 1 -s ' ' {1} | tac | grep -Fm 1 "$(tail -n 1 {0})" \
         | cut -d ' ' -f 1)"
      if [ -n "$START" ] && [ -n "$END" ]; then
         sed -i "$START,$END d" {1}
      fi
    strip_xml: |-
      python -i <<EOF
      import xml.etree.ElementTree as ET

      with open('{1}', 'r') as f:
         document = ET.parse(f)

      parent = document.find("{0}/..")
      if parent is not None:
         target = parent.find("{0}")
         parent.remove(target)
         document.write('{1}', encoding='UTF-8', xml_declaration=True)
      EOF
