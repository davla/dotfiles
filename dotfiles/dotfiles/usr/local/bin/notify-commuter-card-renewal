#!/usr/bin/env sh

# This script sends and schedules a flock of push notifications if the
# email with the receipt of my commuter card period renewal has been received.
#
# The command-line options are the ones used for logging. For detailed info,
# check the source code at {{@@ logger_path @@}}. Here a quick summary:
#   - --<log level>: sets the session log level. The log level must be valid
#   - --color <on/off/auto>: configures the colored output settings
#   - --journald <on/off>: configures the journald prefixes settings
#   - --log-level <log level>: sets the session loggin level
#   - --tag <on/off>: configures the tag settings
#
# {{@@ header() @@}}

#######################################
# Libraries includes
#######################################

. "{{@@ logger_path @@}}"

########################################
# Variables
########################################

# The topic push notification are published on
NTFY_TOPIC='{{@@ commuter_card_renewal_push_topic @@}}'

# The at queue where push notification jobs are scheduled
AT_QUEUE='c'

# The number of days after which the commuter card will be *already* expired
COMMUTER_CARD_DURATION_DAYS='30'

########################################
# Functions
########################################

# This function schedules a push notification for a set number of days before
# the commuter card expires, at 05:00. It is necessary because ntfy only allows
# delays up to 3 days.
#
# Arguments:
#   - $1: the priority of the push notification.
#   - $2: the message of the push notification.
#   - $3: the renewal date of the commuter card.
#   - $4: the number of days before the commuter card expiration date the push
#         notification should be scheduled for.
schedule_push_notification_before_expiration() {
    SCHED_PUSH__PRIORITY="$1"
    SCHED_PUSH__MESSAGE="$2"
    SCHED_PUSH__RENEWAL_DATE="$3"
    SCHED_PUSH__DAYS_BEFORE_EXPIRATION="$4"

    SCHED_PUSH__DAYS_OFFSET="$(( COMMUTER_CARD_DURATION_DAYS - \
        SCHED_PUSH__DAYS_BEFORE_EXPIRATION ))"
    SCHED_PUSH__AT_TIME="05:00 $SCHED_PUSH__RENEWAL_DATE \
        + $SCHED_PUSH__DAYS_OFFSET days"

    echo ntfy publish --priority "$SCHED_PUSH__PRIORITY" "'$NTFY_TOPIC'" \
        "'$SCHED_PUSH__MESSAGE'" | at -q "$AT_QUEUE" "$SCHED_PUSH__AT_TIME"

    unset SCHED_PUSH__AT_TIME SCHED_PUSH__DAYS_BEFORE_EXPIRATION \
        SCHED_PUSH__DAYS_OFFSET SCHED_PUSH__MESSAGE SCHED_PUSH__PRIORITY \
        SCHED_PUSH__RENEWAL_DATE
}

########################################
# Input processing
########################################

# Logging defaults
logging_set_level 'info'
logging_set_tag 'on'
logging_set_journald 'off'

while [ $# -gt 0 ]; do
    set +e
    logging_parse_arg "$1" "$2"
    case "$?" in
        255)
            exit 255
            ;;

        *)
            shift "$?"
            ;;
    esac
    set -e
done

########################################
# Main
########################################

log_debug 'Check for unread commuter card renewal email'
RENEWAL_DATE="$(imapfilter -c "{{@@ imapfilter_check_commuter_card_renewal_path | home_abs2var @@}}")" || {
    log_info 'No commuter card renewal email found'
    exit 0
}
log_info 'Commuter card renewal email received'

log_debug 'Check if notifications are already scheduled'
[ -z "$(at -l -q "$AT_QUEUE")" ] || {
    log_info 'Push notifications already scheduled'
    exit 0
}
log_info 'Schedule push notification'

log_debug 'Send notification for renewal email found'
ntfy publish --priority low "$NTFY_TOPIC" 'Renewal email received'

schedule_push_notification_before_expiration 'default' \
    'Commuter pass expiring next week' "$RENEWAL_DATE" 7
schedule_push_notification_before_expiration 'default' \
    'Commuter pass expiring in 3 days' "$RENEWAL_DATE" 3
schedule_push_notification_before_expiration 'high' \
    'Commuter pass expiring in 2 days' "$RENEWAL_DATE" 2
schedule_push_notification_before_expiration 'max' \
    'Commuter pass expiring tomorrow' "$RENEWAL_DATE" 1
schedule_push_notification_before_expiration 'max' \
    'Commuter pass expired' "$RENEWAL_DATE" 0
