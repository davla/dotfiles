%YAML 1.2
---
# This dotdrop config file is meant for user dotfiles

actions:
  post:
    autorandr: sh actions/autorandr.sh "{0}"

    # This action applies the cursor theme and size via gsettings. The settings
    # file are stored in binary format, so no dotfile management is possible.
    gsettings-icon-theme: |-
      gsettings set org.gnome.desktop.interface cursor-theme {0}
      gsettings set org.gnome.desktop.interface cursor-size {1}

    i3: sh actions/i3.sh

    # This action installs VSCode extensions given in the first argument. This
    # needs to be a file with one package specification per line.
    vscode-install-extensions: >-
      xargs -n 1 code --force --install-extension < {0}

config:
  backup: false
  banner: true
  create: true
  dotpath: dotfiles
  filter_file:
  - python/filters.py
  func_file:
  - python/functions.py
  ignoreempty: true
  import_configs:
  - yaml/profiles/all-distros/all-hosts/{{@@ user @@}}/{{@@ display_server @@}}.yaml:optional
  - yaml/profiles/all-distros/all-hosts/{{@@ user @@}}/{{@@ output_scaling @@}}.yaml:optional
  - yaml/profiles/all-distros/all-hosts/{{@@ user @@}}/repos.yaml:optional
  - yaml/profiles/all-distros/all-hosts/all-users/shared.yaml
  - yaml/profiles/all-distros/all-hosts/all-users/shell.yaml
  - yaml/profiles/all-distros/{{@@ env['HOST'] @@}}/{{@@ user @@}}/timers.yaml:optional
  import_variables:
  - yaml/variables/{{@@ env['DISTRO'] @@}}/{{@@ env['HOST'] @@}}/{{@@ user @@}}/*.yaml:optional
  - yaml/variables/{{@@ env['DISTRO'] @@}}/{{@@ env['HOST'] @@}}/all-users/*.yaml:optional
  - yaml/variables/{{@@ env['DISTRO'] @@}}/all-hosts/{{@@ user @@}}/*.yaml:optional
  - yaml/variables/{{@@ env['DISTRO'] @@}}/all-hosts/all-users/*.yaml:optional
  - yaml/variables/all-distros/{{@@ env['HOST'] @@}}/{{@@ user @@}}/*.yaml:optional
  - yaml/variables/all-distros/{{@@ env['HOST'] @@}}/all-users/*.yaml:optional
  - yaml/variables/all-distros/all-hosts/{{@@ user @@}}/*.yaml:optional
  - yaml/variables/all-distros/all-hosts/all-users/*.yaml
  keepdot: false
  link_dotfile_default: nolink
  link_on_import: nolink
  longkey: false
  showdiff: true
  workdir: '{{@@ xdg_config("dotdrop") @@}}'

dotfiles:
  d_autorandr:
    src: config/autorandr
    dst: '{{@@ xdg_config("autorandr") @@}}'
    actions:
    - autorandr '{{@@ _dotfile_abs_dst @@}}'
  d_desktop-directories:
    src: local/share/desktop-directories
    dst: '{{@@ xdg_data("desktop-directories") @@}}'
  d_git:
    src: config/git
    dst: '{{@@ xdg_config("git") @@}}'
  d_i3blocks-email:
    src: config/i3blocks-email
    dst: '{{@@ xdg_config("i3blocks-email") @@}}'
  d_geany_filedefs:
    src: config/geany/filedefs
    dst: '{{@@ xdg_config("geany/filedefs") @@}}'
    cmpignore:
    - '*.README'
    upignore:
    - '*.README'
  d_sway:
    src: config/sway
    dst: '{{@@ xdg_config("sway") @@}}'
  d_sway-launcher-desktop:
    src: config/sway-launcher-desktop
    dst: '{{@@ xdg_config("sway-launcher-desktop") @@}}'
  d_thunar:
    src: config/Thunar
    dst: '{{@@ xdg_config("Thunar") @@}}'
  d_vscode_snippets:
    src: config/Code/User/snippets
    dst: '{{@@ xdg_config("Code/User/snippets") @@}}'
  d_xfce4:
    src: config/xfce4
    dst: '{{@@ xdg_config("xfce4") @@}}'
    cmpignore:
    - desktop
    - xfce4-screenshooter
    - xfwm4
    instignore:
    - desktop
    - xfce4-screenshooter
    - xfwm4
    upignore:
    - desktop
    - xfce4-screenshooter
    - xfwm4
  f_alacritty.yml:
    src: config/alacritty/alacritty.yml
    dst: '{{@@ xdg_config("alacritty/alacritty.yml") @@}}'
  f_at-spi-dbus-bus.desktop:
    src: config/autostart/disable-system-default.desktop
    dst: '{{@@ xdg_config("autostart/at-spi-dbus-bus.desktop") @@}}'
  f_autorandr.desktop:
    src: config/autostart/disable-system-default.desktop
    dst: '{{@@ xdg_config("autostart/autorandr.desktop") @@}}'
  f_calibre_global.py:
    src: config/calibre/global.py
    dst: '{{@@ xdg_config("calibre/global.py") @@}}'
  f_clipman.service:
    src: config/systemd/user/clipman.service
    dst: '{{@@ xdg_config("systemd/user/clipman.service") @@}}'
  f_docker_config.json:
    src: config/docker/config.json
    dst: '{{@@ docker_path @@}}/config.json'
  f_dunstrc:
    src: config/dunst/dunstrc.lodpi
    dst: '{{@@ dunstrc_dst | default(xdg_config("dunst/dunstrc")) @@}}'
  f_fonts.conf:
    src: config/fontconfig/fonts.conf
    dst: '{{@@ xdg_config("fontconfig/fonts.conf") @@}}'
  f_geany_colorschemes_on-my-own.conf:
    src: config/geany/colorschemes/on-my-own.conf
    dst: '{{@@ xdg_config("geany/colorschemes/on-my-own.conf") @@}}'
  f_geany_geany.conf:
    src: config/geany/geany.conf
    dst: '{{@@ xdg_config("geany/geany.conf") @@}}'
  f_geany_keybindings.conf:
    src: config/geany/keybindings.conf
    dst: '{{@@ xdg_config("geany/keybindings.conf") @@}}'
  f_geoclue-demo-agent.desktop:
    src: config/autostart/disable-system-default.desktop
    dst: '{{@@ xdg_config("autostart/geoclue-demo-agent.desktop") @@}}'
  f_ghci:
    src: ghci
    dst: ~/.ghci
  f_gnome-keyring-pkcs11.desktop:
    src: config/autostart/disable-system-default.desktop
    dst: '{{@@ xdg_config("autostart/gnome-keyring-pkcs11.desktop") @@}}'
  f_gnome-keyring-secrets.desktop:
    src: config/autostart/disable-system-default.desktop
    dst: '{{@@ xdg_config("autostart/gnome-keyring-secrets.desktop") @@}}'
  f_gnome-keyring-ssh.desktop:
    src: config/autostart/disable-system-default.desktop
    dst: '{{@@ xdg_config("autostart/gnome-keyring-ssh.desktop") @@}}'
  f_gpg-agent.conf:
    src: gnupg/gpg-agent.conf
    dst: ~/.gnupg/gpg-agent.conf
  f_gtk-2.0_gtkrc:
    src: config/gtk-2.0/gtkrc.lodpi
    dst: '{{@@ "%s/%s" | format(gtk2_path, gtk2_gtkrc_dst | default("gtkrc")) @@}}'
  f_gtk-3.0_gtk.css:
    src: config/gtk-3.0/gtk.css
    dst: '{{@@ xdg_config("gtk-3.0/gtk.css") @@}}'
  f_gtk-3.0_settings.ini:
    src: config/gtk-3.0/settings.ini.lodpi
    dst: '{{@@ gtk3_settings_dst | default(xdg_config("gtk-3.0/settings.ini")) @@}}'
  f_hgrc:
    src: config/hg/hgrc
    dst: '{{@@ xdg_config("hg/hgrc") @@}}'
  f_i3blocks_config:
    src: config/i3blocks/config
    dst: '{{@@ xdg_config("i3blocks/config") @@}}'
  f_i3config:
    src: config/i3/config
    dst: '{{@@ xdg_config("i3/config") @@}}'
  f_icons_index.theme:
    src: icons/default/index.theme
    dst: ~/.icons/default/index.theme
  f_keyring.service:
    src: config/systemd/user/keyring.service
    dst: '{{@@ xdg_config("systemd/user/keyring.service") @@}}'
  f_light-locker.desktop:
    src: config/autostart/disable-system-default.desktop
    dst: '{{@@ xdg_config("autostart/light-locker.desktop") @@}}'
  f_mako_config:
    src: config/mako/config
    dst: '{{@@ xdg_config("mako/config") @@}}'
  f_mimeapps.list:
    src: config/mimeapps.list
    dst: '{{@@ xdg_config("mimeapps.list") @@}}'
  f_org.gnome.SettingsDaemon.DiskUtilityNotify.desktop:
    src: config/autostart/disable-system-default.desktop
    dst: >-
      {{@@ xdg_config(
        "autostart/org.gnome.SettingsDaemon.DiskUtilityNotify.desktop"
      ) @@}}
  f_pam_environment:
    src: pam_environment
    dst: ~/.pam_environment
  f_parcellite.service:
    src: config/systemd/user/parcellite.service
    dst: '{{@@ xdg_config("systemd/user/parcellite.service") @@}}'
  f_parcellite-startup.desktop:
    src: config/autostart/disable-system-default.desktop
    dst: '{{@@ xdg_config("autostart/parcellite-startup.desktop") @@}}'
  f_picom.conf:
    src: config/picom.conf
    dst: '{{@@ xdg_config("picom.conf") @@}}'
  f_picom.service:
    src: config/systemd/user/picom.service
    dst: '{{@@ xdg_config("systemd/user/picom.service") @@}}'
  f_polkit-authentication-agent.service:
    src: config/systemd/user/polkit-authentication-agent.service
    dst: '{{@@ xdg_config("systemd/user/polkit-authentication-agent.service") @@}}'
  f_polkit-gnome-authentication-agent-1.desktop:
    src: config/autostart/disable-system-default.desktop
    dst: >-
      {{@@
        xdg_config("autostart/polkit-gnome-authentication-agent-1.desktop")
      @@}}
  f_print-applet.desktop:
    src: config/autostart/disable-system-default.desktop
    dst: '{{@@ xdg_config("autostart/print-applet.desktop") @@}}'
  f_pulseaudio.desktop:
    src: config/autostart/disable-system-default.desktop
    dst: '{{@@ xdg_config("autostart/pulseaudio.desktop") @@}}'
  f_python_keyring:
    src: config/python_keyring/keyringrc.cfg
    dst: '{{@@ xdg_config("python_keyring/keyringrc.cfg") @@}}'
  f_qt5ct.conf:
    src: config/qt5ct/qt5ct.conf
    dst: '{{@@ xdg_config("qt5ct/qt5ct.conf") @@}}'
  f_sct.service:
    src: config/systemd/user/sct.service
    dst: '{{@@ xdg_config("systemd/user/sct.service") @@}}'
  f_ssh_config:
    src: ssh/config
    dst: ~/.ssh/config
  f_sway_bar:
    src: templating/i3-sway/bar
    dst: '{{@@ xdg_config("sway/bar") @@}}'
  f_sway_containers:
    src: templating/i3-sway/containers
    dst: '{{@@ xdg_config("sway/containers") @@}}'
  f_sway_modes:
    src: templating/i3-sway/modes
    dst: '{{@@ xdg_config("sway/modes") @@}}'
  f_swayfocus.service:
    src: config/systemd/user/swayfocus.service
    dst: '{{@@ xdg_config("systemd/user/swayfocus.service") @@}}'
  f_teams.desktop:
    src: config/autostart/disable-system-default.desktop
    dst: '{{@@ xdg_config("autostart/teams.desktop") @@}}'
  f_trolltech.conf:
    src: config/Trolltech.conf
    dst: '{{@@ xdg_config("Trolltech.conf") @@}}'
  f_udiskie.service:
    src: config/systemd/user/udiskie.service
    dst: '{{@@ xdg_config("systemd/user/udiskie.service") @@}}'
  f_udiskie_config.yml:
    src: config/udiskie/config.yml
    dst: '{{@@ xdg_config("udiskie/config.yml") @@}}'
  f_vmware-user.desktop:
    src: config/autostart/disable-system-default.desktop
    dst: '{{@@ xdg_config("autostart/vmware-user.desktop") @@}}'
  f_vmware-user.service:
    src: config/systemd/user/vmware-user.service
    dst: '{{@@ xdg_config("systemd/user/vmware-user.service") @@}}'
  f_vscode_extension-list.txt:
    src: config/Code/User/extension-list.txt
    # Temporary destination as the file is not read by VSCode at runtime, so it
    # can be deleted
    dst: '{{@@ vscode_tmp_dst @@}}'
    actions:
    # This action installs VSCode extensions listed in the dotfile on-the-fly
    - vscode-install-extensions '{{@@ vscode_tmp_dst @@}}'
    # This transformation actually creates the dotfile.
    trans_write: vscode-list-extensions
  f_vscode_keybindings.json:
    src: config/Code/User/keybindings.json
    dst: '{{@@ xdg_config("Code/User/keybindings.json") @@}}'
  f_vscode_settings.json:
    src: config/Code/User/settings.json
    dst: '{{@@ xdg_config("Code/User/settings.json") @@}}'
  f_xdg-user-dirs.desktop:
    src: config/autostart/disable-system-default.desktop
    dst: '{{@@ xdg_config("autostart/xdg-user-dirs.desktop") @@}}'
  f_xfce-applications.menu:
    src: config/menus/xfce-applications.menu
    dst: '{{@@ xdg_config("menus/xfce-applications.menu") @@}}'

profiles:
  # This profile groups configuration files for CLI-based applictions.
  cli:
    import:
    - yaml/dotfiles/all-distros/{{@@ env['HOST'] @@}}/{{@@ user @@}}/cli.yaml:optional
    include:
    - git

  # This profile groups git dotfiles
  git:
    dotfiles:
    - d_git
    import:
    - yaml/dotfiles/all-distros/{{@@ env['HOST'] @@}}/{{@@ user @@}}/git.yaml:optional

  # This profile groups geany-related dotfiles. Individual files are addressed,
  # rather than the whole directory, as it was execssively complex to ignore
  # all but one colorscheme.
  geany:
    dotfiles:
    - d_geany_filedefs
    - f_geany_colorschemes_on-my-own.conf
    - f_geany_geany.conf
    - f_geany_keybindings.conf
    variables:
      is_headless: false

  # This profile contains dotfiles used by GUI applications, plus the look &
  # feel settings of the GUI itself.
  gui:
    dotfiles:
    - f_mimeapps.list
    include:
    - gui-{{@@ display_server @@}}
    - geany
    - look-and-feel
    - vscode
    variables:
      is_headless: false

  # This profile contains the dotfiles for the whole i3 session, that means a
  # little bit more than just the i3 configuration file.
  i3:
    dotfiles:
    - d_thunar
    - f_alacritty.yml
    - f_dunstrc
    - f_i3blocks_config
    - f_i3config
    - f_parcellite.service
    - f_picom.conf
    - f_picom.service
    - f_sct.service
    import:
    - yaml/dotfiles/all-distros/{{@@ env['HOST'] @@}}/{{@@ user @@}}/i3.yaml:optional
    actions:
    - i3
    include:
    - i3-{{@@ output_scaling @@}}
    - look-and-feel
    - startup
    variables:
      display_server: x11
      is_headless: false
      on_wayland: false
      on_x11: true
      wm_name: i3

  # This profile includes the dotfiles for look & feel of a GUI environment,
  # both Gtk, Qt and bare X11.
  look-and-feel:
    dotfiles:
    - f_fonts.conf
    - f_gtk-2.0_gtkrc
    - f_gtk-3.0_gtk.css
    - f_gtk-3.0_settings.ini
    - f_icons_index.theme
    - f_qt5ct.conf
    - f_trolltech.conf
    include:
    - look-and-feel-{{@@ display_server @@}}
    - look-and-feel-{{@@ output_scaling @@}}
    variables:
      is_headless: false
    actions:
    - gsettings-icon-theme '{{@@ cursor_theme @@}}' '{{@@ cursor_size @@}}'

  # This profile contains dotfiles used when the user session starts.
  startup:
    dotfiles:
    - f_at-spi-dbus-bus.desktop
    - f_autorandr.desktop
    - f_geoclue-demo-agent.desktop
    - f_gnome-keyring-pkcs11.desktop
    - f_gnome-keyring-secrets.desktop
    - f_gnome-keyring-ssh.desktop
    - f_gpg-agent.conf
    - f_keyring.service
    - f_light-locker.desktop
    - f_org.gnome.SettingsDaemon.DiskUtilityNotify.desktop
    - f_pam_environment
    - f_parcellite-startup.desktop
    - f_polkit-authentication-agent.service
    - f_polkit-gnome-authentication-agent-1.desktop
    - f_print-applet.desktop
    - f_pulseaudio.desktop
    - f_python_keyring
    - f_xdg-user-dirs.desktop
    import:
    - yaml/dotfiles/{{@@ env['DISTRO'] @@}}/{{@@ env['HOST'] @@}}/{{@@ user @@}}/startup.yaml:optional
    include:
    - startup-{{@@ display_server @@}}
    - startup-{{@@ output_scaling @@}}

  # This profile contains the dotfiles for the whole sway session, that means a
  # little bit more than just the sway configuration files.
  sway:
    dotfiles:
    - d_i3blocks-email
    - d_sway
    - d_sway-launcher-desktop
    - f_alacritty.yml
    - f_clipman.service
    - f_i3blocks_config
    - f_mako_config
    - f_sway_bar
    - f_sway_containers
    - f_sway_modes
    - f_swayfocus.service
    include:
    - look-and-feel
    - startup
    variables:
      display_server: wayland
      is_headless: false
      on_wayland: true
      on_x11: false
      wm_name: sway

  # This profile groups VSCode-related dotfiles, as well as creating the
  # necessary variables for dotfiles actions. It was chosen to address
  # individual dotfiles rather than the whole ~/.config/Code/User directory as
  # there are as many files to ignore in that directory than the ones to be
  # managed.
  vscode:
    dotfiles:
    - d_vscode_snippets
    - f_vscode_extension-list.txt
    - f_vscode_keybindings.json
    - f_vscode_settings.json
    dynvariables:
      vscode_tmp_dst: mktemp /tmp/vscode-tmp.XXX
    variables:
      is_headless: false

  # This profile contains the dotfiles for the whole Xfce session.
  xfce:
    dotfiles:
    - d_desktop-directories
    - d_thunar
    - d_xfce4
    - f_xfce-applications.menu
    include:
    - look-and-feel
    - startup
    variables:
      display_server: x11
      is_headless: false
      on_wayland: false
      on_x11: true

trans_write:

  # This transformation basically creates the dotfile. Indeed, it doesn't use
  # the {0} argument, and simply dumps the output of the command to {1}
  vscode-list-extensions: code --list-extensions > {1}

variables:
  # These variables are used to tell which display server is in use on the
  # system dotdrop is currently executing. They're defined here as they're used
  # in this config file when importing sub-config and including profiles, when
  # variables from external files are not yet available.
  #
  # Some profiles override these variables, in a sort-of "cross-deployment"
  # fashion, since they only make sense with some values (e.g. the i3 profile
  # overrides this way:
  #   display_server: x11
  #   on_wayland: true
  #   on_x11: true
  #   is_headless: false
  display_server: '{{@@ env["DISPLAY_SERVER"] @@}}'
  is_headless: '{{@@ display_server == "headless" @@}}'
  on_wayland: '{{@@ display_server == "wayland" @@}}'
  on_x11: '{{@@ display_server == "x11" @@}}'

  # This variable determines which type of output scaling is in use on the
  # system where dotdrop is running. It's defined here as it's used in this
  # config file when importing sub-config and including profiles, when
  # variables from external files are not yet available.
  output_scaling: '{{@@ env["OUTPUT_SCALING"] + "-scaling" @@}}'

  # This variable is used to differentiate between user and root configuration
  # in some dotfiles.
  user: user
