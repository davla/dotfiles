%YAML 1.2
---
# This dotdrop config file is meant for user dotfiles

actions:
  post:
    i3: sh actions/i3.sh

    # This action allows user systemd timers to be executed also when the user
    # is not logged in, via lingering
    timers: id -u | xargs sudo loginctl enable-linger

    # This action installs VSCode extensions given in the first argument. This
    # needs to be a file with one package specification per line.
    vscode-install-extensions: >-
      xargs -n 1 code --force --install-extension < {0}

config:
  backup: false
  banner: true
  create: true
  dotpath: dotfiles
  func_file:
  - python/functions.py
  ignoreempty: true
  import_configs:
  - yaml/profiles/autorandr.yaml
  - yaml/profiles/shared.yaml
  import_variables:
  - yaml/variables/{{@@ user @@}}/*.yaml:optional
  - yaml/variables/{{@@ env['HOST'] @@}}/*.yaml:optional
  - yaml/variables/{{@@ env['HOST'] @@}}/{{@@ user @@}}/*.yaml:optional
  - yaml/variables/dpi.yaml
  - yaml/variables/shared.yaml
  keepdot: false
  link_dotfile_default: nolink
  link_on_import: nolink
  longkey: false
  showdiff: true
  workdir: '{{@@ xdg_config("dotdrop") @@}}'

dotfiles:
  d_autostart:
    src: config/autostart
    dst: '{{@@ xdg_config("autostart") @@}}'
  d_desktop-directories:
    src: local/share/desktop-directories
    dst: '{{@@ xdg_data("desktop-directories") @@}}'
  d_git:
    src: config/git
    dst: '{{@@ xdg_config("git") @@}}'
  d_i3blocks-email:
    src: config/i3blocks-email
    dst: '{{@@ xdg_config("i3blocks-email") @@}}'
  d_geany_filedefs:
    src: config/geany/filedefs
    dst: '{{@@ xdg_config("geany/filedefs") @@}}'
    cmpignore:
    - '*.README'
    upignore:
    - '*.README'
  d_thunar:
    src: config/Thunar
    dst: '{{@@ xdg_config("Thunar") @@}}'
  d_vscode_snippets:
    src: config/Code/User/snippets
    dst: '{{@@ xdg_config("Code/User/snippets") @@}}'
  d_xfce4:
    src: config/xfce4
    dst: '{{@@ xdg_config("xfce4") @@}}'
    cmpignore:
    - desktop
    - xfce4-screenshooter
    - xfwm4
    upignore:
    - desktop
    - xfce4-screenshooter
    - xfwm4
  d_xresources.d:
    src: config/x11/Xresources.d
    dst: '{{@@ xdg_config("x11/Xresources.d") @@}}'
  f_calibre_global.py:
    src: config/calibre/global.py
    dst: '{{@@ xdg_config("calibre/global.py") @@}}'
  f_compton.conf:
    src: config/compton.conf
    dst: '{{@@ xdg_config("compton.conf") @@}}'
  f_docker_config.json:
    src: config/docker/config.json
    dst: '{{@@ docker_path @@}}/config.json'
  f_dunstrc.lodpi:
    src: config/dunst/dunstrc.lodpi
    dst: '{{@@ dunstrc_lodpi_dst @@}}'
  f_dunstrc.hidpi:
    src: config/dunst/dunstrc.hidpi
    dst: '{{@@ xdg_config("dunst/dunstrc.hidpi") @@}}'
  f_geany_colorschemes_on-my-own.conf:
    src: config/geany/colorschemes/on-my-own.conf
    dst: '{{@@ xdg_config("geany/colorschemes/on-my-own.conf") @@}}'
  f_geany_geany.conf:
    src: config/geany/geany.conf
    dst: '{{@@ xdg_config("geany/geany.conf") @@}}'
  f_geany_keybindings.conf:
    src: config/geany/keybindings.conf
    dst: '{{@@ xdg_config("geany/keybindings.conf") @@}}'
  f_ghci:
    src: ghci
    dst: ~/.ghci
  f_gtk-2.0_gtkrc.lodpi:
    src: config/gtk-2.0/gtkrc.lodpi
    dst: '{{@@ "%s/%s" | format(gtk2_path, gtk2_gtkrc_lodpi_dst) @@}}'
  f_gtk-2.0_gtkrc.hidpi:
    src: config/gtk-2.0/gtkrc.hidpi
    dst: '{{@@ gtk2_path + "/gtkrc.hidpi" @@}}'
  f_gtk-3.0_gtk.css:
    src: config/gtk-3.0/gtk.css
    dst: '{{@@ xdg_config("gtk-3.0/gtk.css") @@}}'
  f_gtk-3.0_settings.ini.lodpi:
    src: config/gtk-3.0/settings.ini.lodpi
    dst: '{{@@ gtk3_settings_lodpi_dst @@}}'
  f_gtk-3.0_settings.ini.hidpi:
    src: config/gtk-3.0/settings.ini.hidpi
    dst: '{{@@ xdg_config("gtk-3.0/settings.ini.hidpi") @@}}'
  f_hgrc:
    src: config/hg/hgrc
    dst: '{{@@ xdg_config("hg/hgrc") @@}}'
  f_i3blocks_config:
    src: config/i3blocks/config
    dst: '{{@@ xdg_config("i3blocks/config") @@}}'
  f_i3config:
    src: config/i3/config
    dst: '{{@@ xdg_config("i3/config") @@}}'
  f_mimeapps.list:
    src: config/mimeapps.list
    dst: '{{@@ xdg_config("mimeapps.list") @@}}'
  f_mrconfig_wiki:
    src: code/wiki/mrconfig
    dst: ~/code/wiki/.mrconfig
  f_orage_oragerc:
    src: config/orage/oragerc
    dst: '{{@@ xdg_config("orage/oragerc") @@}}'
  f_parcellite_parcelliterc:
    src: config/parcellite/parcelliterc
    dst: '{{@@ xdg_config("parcellite/parcelliterc") @@}}'
  f_qt5ct.conf:
    src: config/qt5ct/qt5ct.conf
    dst: '{{@@ xdg_config("qt5ct/qt5ct.conf") @@}}'
  f_ssh_config:
    src: ssh/config
    dst: ~/.ssh/config
  f_trolltech.conf:
    src: config/Trolltech.conf
    dst: '{{@@ xdg_config("Trolltech.conf") @@}}'
  f_virtualbox_virtualbox.xml:
    src: config/VirtualBox/VirtualBox.xml
    dst: '{{@@ xdg_config("VirtualBox/VirtualBox.xml") @@}}'
  f_vscode_extension-list.txt:
    src: config/Code/User/extension-list.txt
    # Temporary destination as the file is not read by VSCode at runtime, so it
    # can be deleted
    dst: '{{@@ vscode_tmp_dst @@}}'
    actions:
    # This action installs VSCode extensions listed in the dotfile on-the-fly
    - vscode-install-extensions '{{@@ vscode_tmp_dst @@}}'
    # This transformation actually creates the dotfile.
    trans_write: vscode-list-extensions
  f_vscode_keybindings.json:
    src: config/Code/User/keybindings.json
    dst: '{{@@ xdg_config("Code/User/keybindings.json") @@}}'
  f_vscode_settings.json:
    src: config/Code/User/settings.json
    dst: '{{@@ xdg_config("Code/User/settings.json") @@}}'
  f_xfce-applications.menu:
    src: config/menus/xfce-applications.menu
    dst: '{{@@ xdg_config("menus/xfce-applications.menu") @@}}'
  f_xresources:
    src: Xresources
    dst: ~/.Xresources
  f_xsessionrc:
    src: xsessionrc
    dst: ~/.xsessionrc

profiles:
  # This profile groups configuration files for CLI-based applictions.
  cli:
    import:
    - yaml/dotfiles/{{@@ env['DISTRO'] @@}}/{{@@ user @@}}/cli.yaml:optional
    - yaml/dotfiles/{{@@ env['HOST'] @@}}/{{@@ user @@}}/cli.yaml:optional
    include:
    - git

  # This profile groups git dotfiles
  git:
    dotfiles:
    - d_git
    import:
    - yaml/dotfiles/{{@@ env['HOST'] @@}}/git.yaml:optional

  # This profile groups geany-related dotfiles. Individual files are addressed,
  # rather than the whole directory, as it was execssively complex to ignore
  # all but one colorscheme.
  geany:
    dotfiles:
    - d_geany_filedefs
    - f_geany_colorschemes_on-my-own.conf
    - f_geany_geany.conf
    - f_geany_keybindings.conf

  # This profile contains dotfiles used by GUI applications, plus the look &
  # feel settings of the GUI itself.
  gui:
    dotfiles:
    - f_mimeapps.list
    - f_parcellite_parcelliterc
    import:
    - yaml/dotfiles/{{@@ env['HOST'] @@}}/gui.yaml:optional
    include:
    - geany
    - look-and-feel
    - vscode

  # This profile contains the dotfiles for the whole i3 session, that means a
  # little bit more than just the i3 configuration file.
  i3:
    dotfiles:
    - f_dunstrc.lodpi
    - f_compton.conf
    - f_i3blocks_config
    - f_i3config
    import:
    - yaml/dotfiles/{{@@ env['HOST'] @@}}/i3.yaml:optional
    actions:
    - i3
    include:
    - autorandr
    - look-and-feel
    - startup

  # This profile includes the dotfiles for look & feel of a GUI environment,
  # both Gtk, Qt and bare X11.
  look-and-feel:
    dotfiles:
    - f_gtk-2.0_gtkrc.lodpi
    - f_gtk-3.0_gtk.css
    - f_gtk-3.0_settings.ini.lodpi
    - f_qt5ct.conf
    - f_trolltech.conf
    - f_xresources
    import:
    - yaml/dotfiles/{{@@ env['HOST'] @@}}/look-and-feel.yaml:optional

  # This profile contains dotfiles for managing repositories with myrepos
  myrepos:
    dotfiles:
    - f_mrtrust
    import:
    - yaml/dotfiles/{{@@ env['HOST'] @@}}/myrepos.yaml:optional
    - yaml/dotfiles/{{@@ user @@}}/myrepos.yaml:optional

  # This profile contains dotfiles used when the X11 session starts.
  startup:
    dotfiles:
    - d_autostart
    - f_xsessionrc
    import:
    - yaml/dotfiles/{{@@ env['HOST'] @@}}/{{@@ user @@}}/startup.yaml:optional

  # This profile groups together systemd timers configuration.
  timers:
    import:
    - yaml/dotfiles/{{@@ env['HOST'] @@}}/{{@@ user @@}}/timers.yaml:optional
    actions:
    - timers

  # This profile groups VSCode-related dotfiles, as well as creating the
  # necessary variables for dotfiles actions. It was chosen to address
  # individual dotfiles rather than the whole ~/.config/Code/User directory as
  # there are as many files to ignore in that directory than the ones to be
  # managed.
  vscode:
    dotfiles:
    - d_vscode_snippets
    - f_vscode_extension-list.txt
    - f_vscode_keybindings.json
    - f_vscode_settings.json
    dynvariables:
      vscode_tmp_dst: mktemp /tmp/vscode-tmp.XXX

  # This profile contains the dotfiles for the whole Xfce session.
  xfce:
    dotfiles:
    - d_desktop-directories
    - d_thunar
    - d_xfce4
    - f_xfce-applications.menu
    include:
    - look-and-feel
    - startup

trans_write:

  # This transformation basically creates the dotfile. Indeed, it doesn't use
  # the {0} argument, and simply dumps the output of the command to {1}
  vscode-list-extensions: code --list-extensions > {1}

variables:
  # This variable is used to differentiate between user and root configuration
  # in some dotfiles.
  user: user
