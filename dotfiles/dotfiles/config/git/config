{%@@ set date_format = '%d %b %Y' @@%}
{%@@ set file_history = 'log --patch --pretty=full-commit -- ' @@%}
{%@@ set graph = "log --branches --remotes='origin' --remotes='upstream' "
    "--graph --pretty=graph" @@%}
{%@@ set graph_all = 'log --all --graph --pretty=graph' @@%}
{%@@ set info = 'status -sb' @@%}
{%@@ set new_branch = 'checkout --quiet -b' @@%}
{%@@ set restore = 'checkout --quiet HEAD --' @@%}
{%@@ set squash = 'merge --squash' @@%}
{%@@ set unadd = 'reset HEAD --' @@%}
{%@@ set unstash = 'stash pop' @@%}
{%@@ set update = 'rebase @{u}' @@%}
# {{@@ header() @@}}

[alias]
    # "new" commands
    file-history = {{@@ file_history @@}}
    graph = {{@@ graph @@}}
    graph-all = {{@@ graph_all @@}}
    info = {{@@ info @@}}
    ls-aliases = config --get-regexp ^alias\\.
    branch-new = {{@@ new_branch @@}}
    restore = {{@@ restore @@}}
    squash = {{@@ squash @@}}
    unadd = {{@@ unadd @@}}
    unstash = {{@@ unstash @@}}
    update = {{@@ update @@}}

    # add
    a = add
    aa = add --all
    ap = add --patch

    # branch
    b = branch
    ba = branch --all
    bd = branch --delete
    bD = branch --delete --force
    bm = branch --move
    bn = {{@@ new_branch @@}}

    # chekcout
    ck = checkout --quiet

    # cherry-pick
    cp = cherry-pick
    cpa = cherry-pick --abort
    cpc = cherry-pick --continue
    cpn = cherry-pick --no-commit

    # clean
    cf = clean -d --force

    # commit
    c = commit
    ca = commit --amend --no-edit
    caa = commit --all
    car = commit --amend
    cx = commit --fixup

    # diff
    d = diff
    ds = diff --staged

    # fetch
    f = fetch

    # file history
    fh = {{@@ file_history @@}}

    # graph
    g = {{@@ graph @@}}
    ga = {{@@ graph_all @@}}

    # log
    l = log

    # merge
    m = merge --log
    ma = merge --abort
    mc = merge --continue
    mf = merge --log --no-ff
    mff = merge --ff-only

    # pull
    pl = pull

    # push
    ps = push
    psf = push --force

    # rebase
    rb = rebase
    rba = rebase --abort
    rbc = rebase --continue
    rbi = rebase --interactive

    # reset
    rs = reset
    rsk = reset --keep
    rsm = reset --mixed

    # restore
    rt = {{@@ restore @@}}

    # show
    sw = show --patch --compact-summary --pretty=full-commit

    # squash
    sq = {{@@ squash @@}}

    # status
    i = {{@@ info @@}}

    # stash
    s = stash

    # unadd
    ua = {{@@ unadd @@}}

    # unstash
    us = {{@@ unstash @@}}

    # update
    up = {{@@ update @@}}

[apply]
    ignoreWhitespace = false
    whitespace = fix

[blame]
    date = format:{{@@ date_format @@}}

[branch]
    autoSetupMerge = true
    autoSetupRebase = always
    # sort

# [browser]
#    <tool>.cmd
#    <tool>.path

[checkout]
    defaultRemote = origin
    # guess

[clone]
    defaultRemoteName = origin

# [column]
#     ui
#     branch
#     clean
#     status
#     tag

{%@@ if git_commit_gpg_sign | is_truthy -@@%}

[commit]
    gpgsign = true

{%@@ endif -@@%}

[core]
    autocrlf = input
    editor = vim
    excludesFile = ~/.config/git/ignore

{%@@ if git_credentials_helper is defined -@@%}

[credential]
    helper = {{@@ git_credentials_helper @@}}

{%@@ endif -@@%}

[diff]
    # colorMoved
    # colorMovedWS
    indentHeuristic = true
    mnemonicPrefix = true
    # orderFile
    renames = true
    wsErrorHighlight = all

[fetch]
    parallel = 0
    prune = true
    pruneTags = true
    showForcedUpdates = true

{%@@ if gitreview_username is defined -@@%}

[gitreview]
    username = {{@@ gitreview_username @@}}

{%@@ endif -@@%}

[help]
    autocorrect = 5

[log]
    date = format:{{@@ date_format @@}}

[merge]
    log = 1

[rebase]
    abbreviateCommands = true
    autoSquash = true
    autoStash = true
    missingCommitsCheck = warn
    rescheduleFailedExec = true

[pretty]
    full-commit = %C(yellow)[%h]%C(reset) %an - %ad \
%C(green)(%ar)%C(red)%d%C(reset)%n%n%w(79,2,4)%s%n%n%w(79,2,2)%b
    graph = %C(yellow)%h %C(green)[%ar] %Creset%s%C(red)%d%n

[pull]
    rebase = true

[push]
    default = upstream

[tag]
    sort = -version:refname

{%@@ if not env['HOST'].startswith('work') -@@%}

[user]
    name = {{@@ full_name @@}}
    email = {{@@ email @@}}
    username = {{@@ git_username @@}}

{%@@ endif -@@%}
