#!/usr/bin/env sh

# This script is meant to execute actions after specific packages are installed
# via APT.
#
# {{@@ header() @@}}

# This doesn't work if the script is sourced
. "$(dirname "$0")/lib"

########################################
# Setup logging
########################################

. "{{@@ logger_path @@}}"
logging_set_level 'info'
logging_set_journald 'off'
logging_set_tag 'on'

#######################################
# Functions
#######################################

# This function sets an alternative from the Debian alternative system. If the
# alternatives group doesn't exist, it is created.
#
# Arguments:
#   - $1: The name of the binary to add to the alternatives system
#   - $2: The alternatives group name
set_alternative() {
    SET_ALT_BIN_NAME="$1"
    SET_ALT_GROUP_NAME="$2"

    # If the executable is not found on PATH, there's nothing to setup yet.
    # This script is executed multiple times by dpkg, not all of them have the
    # package fully unpacked on the system.
    SET_ALT_BIN_PATH="$(which "$SET_ALT_BIN_NAME")" || return 0

    log_info "Add '$SET_ALT_BIN_NAME' to '$SET_ALT_GROUP_NAME' alternatives"
    update-alternatives --install \
        "/usr/local/bin/$SET_ALT_GROUP_NAME" \
        "$SET_ALT_GROUP_NAME" \
        "$SET_ALT_BIN_PATH" \
        50
    update-alternatives --set "$SET_ALT_GROUP_NAME" "$SET_ALT_BIN_PATH"

    unset SET_ALT_GROUP_NAME SET_ALT_BIN_NAME SET_ALT_BIN_PATH
}

########################################
# Main
########################################

case "$(apt_operation)" in
    'dist-upgrade'|'install'|'reinstall'|'upgrade')
        for PACKAGE in $(apt_packages); do
            case "$PACKAGE" in
                *bat*)
                    set_alternative 'batcat' 'bat'
                    ;;

                *code-insiders*)
                    set_alternative 'code-insiders' 'code'
                    ;;

                *docker-compose-plugin*)
                    log_info 'Enable podman daemon socket'
                    systemctl enable podman.socket
                    ;;

                *firefox-beta*)
                    set_alternative 'firefox-beta' 'firefox'
                    ;;

                *podman-compose*)
                    log_info 'Alias "docker-compose" as "podman-compose"'
                    which podman-compose | xargs -I '{}' ln --symbolic \
                        --force '{}' /usr/local/bin/docker-compose
                    ;;

                *rustup*)
                    log_info 'Install stable toolchain via rustup'
                    mkdir --parents '{{@@ rustup_home @@}}/tmp'
                    # Allow non-root users to check for toolchain updates
                    chmod a+w '{{@@ rustup_home @@}}/tmp'
                    # rust-src is used by static analyzers
                    env RUSTUP_HOME='{{@@ rustup_home @@}}' \
                        rustup toolchain install stable --component rust-src
                    ;;
            esac
        done
        ;;
esac
