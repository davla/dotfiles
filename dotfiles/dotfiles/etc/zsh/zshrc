{#@@
    This snippet adds system-wide zsh configuration, that can be beneficial for
    any user or that is not user-specific.
-@@#}

{{@@ etc_zshrc_append_marker @@}}

########################################
# Keybindings
########################################

# This stackoverflow answer was very enlighenting about terminfo
# https://stackoverflow.com/a/48757381. And the Zsh Arch Wiki page confirmed.
# Actually, that's where most of this code has been proudly stolen from :)

# create a zkbd compatible hash;
# to add other keys to this hash, see: man 5 terminfo
typeset -g -A key

key[Home]="${terminfo[khome]}"
key[End]="${terminfo[kend]}"
key[Insert]="${terminfo[kich1]}"
key[Backspace]="${terminfo[kbs]}"
key[Delete]="${terminfo[kdch1]}"
key[Up]="${terminfo[kcuu1]}"
key[Down]="${terminfo[kcud1]}"
key[Left]="${terminfo[kcub1]}"
key[Right]="${terminfo[kcuf1]}"
key[Ctrl-Left]="${terminfo[kLFT5]}"
key[Ctrl-Right]="${terminfo[kRIT5]}"

# Setup commonly expected keybindings
[ -n "${key[Home]}" ] && bindkey "${key[Home]}" beginning-of-line
[ -n "${key[End]}" ] && bindkey "${key[End]}" end-of-line
[ -n "${key[Insert]}" ] && bindkey "${key[Insert]}" overwrite-mode
[ -n "${key[Backspace]}" ] && bindkey "${key[Backspace]}" backward-delete-char
[ -n "${key[Delete]}" ] && bindkey "${key[Delete]}" delete-char
[ -n "${key[Up]}" ] && bindkey "${key[Up]}" up-line-or-history
[ -n "${key[Down]}" ] && bindkey "${key[Down]}" down-line-or-history
[ -n "${key[Left]}" ] && bindkey "${key[Left]}" backward-char
[ -n "${key[Right]}" ] && bindkey "${key[Right]}" forward-char
[ -n "${key[Ctrl-Left]}" ] && bindkey "${key[Ctrl-Left]}" backward-word
[ -n "${key[Ctrl-Right]}" ] && bindkey "${key[Ctrl-Right]}" forward-word

{#@@ Debian has its own version of this patched in the apt package @@#}
{%@@ if env['DISTRO'] != 'debian' -@@%}

# Finally, make sure the terminal is in application mode, when zle is
# active. Only then are the values from $terminfo valid.
if (( ${+terminfo[smkx]} && ${+terminfo[rmkx]} )); then
    autoload -Uz add-zle-hook-widget
    function zle_application_mode_start { echoti smkx }
    function zle_application_mode_stop { echoti rmkx }
    add-zle-hook-widget -Uz zle-line-init zle_application_mode_start
    add-zle-hook-widget -Uz zle-line-finish zle_application_mode_stop
fi

{%@@ endif -@@%}
