{%@@ set date_format = '%d %b %Y' @@%}
{%@@ set commit_display_format = "%C(yellow)[%h]%C(reset) %an - %ad "
    "%C(green)(%ar)%C(red)%d%C(reset)%n%n    %s" @@%}
{%@@ set graph_format = '%C(yellow)%h %C(green)[%ar] %Creset%s%C(red)%d%n' @@%}
{%@@ set file_history = "log --patch --format='%s' -- "
    | format(commit_display_format) @@%}
{%@@ set graph = "log --branches --remotes='origin' --remotes='upstream' "
    "--graph --format='%s'" | format(graph_format) @@%}
{%@@ set graph_all = "log --all --graph --format='%s'"
    | format(graph_format) @@%}
{%@@ set info = 'status -sb' @@%}
{%@@ set new_branch = 'checkout -qb' @@%}
{%@@ set restore = 'checkout -q HEAD --' @@%}
{%@@ set squash = 'merge --squash' @@%}
{%@@ set unadd = 'reset HEAD --' @@%}
{%@@ set unstash = 'stash pop' @@%}
{%@@ set update = 'rebase @{u}' @@%}
# {{@@ header() @@}}

[alias]
    # "new" commands
    file-history = {{@@ file_history @@}}
    graph = {{@@ graph @@}}
    graph-all = {{@@ graph_all @@}}
    info = {{@@ info @@}}
    ls-aliases = config --get-regexp ^alias\\.
    branch-new = {{@@ new_branch @@}}
    restore = {{@@ restore @@}}
    squash = {{@@ squash @@}}
    unadd = {{@@ unadd @@}}
    unstash = {{@@ unstash @@}}
    update = {{@@ update @@}}

    # add
    a = add
    aa = add --all
    ap = add --patch

    # branch
    b = branch
    ba = branch --all
    bd = branch -d
    bn = {{@@ new_branch @@}}

    # chekcout
    ck = checkout -q

    # cherry-pick
    cp = cherry-pick
    cpa = cherry-pick --abort
    cpc = cherry-pick --continue
    cpn = cherry-pick --no-commit

    # clean
    cf = clean -fd

    # commit
    c = commit
    ca = commit --amend --no-edit
    caa = commit --all
    car = commit --amend
    cx = commit --fixup

    # diff
    d = diff
    ds = diff --staged

    # fetch
    f = fetch

    # file history
    fh = {{@@ file_history @@}}

    # graph
    g = {{@@ graph @@}}
    ga = {{@@ graph_all @@}}

    # log
    l = log

    # merge
    m = merge --log
    ma = merge --abort
    mc = merge --continue
    mff = merge --ff-only

    # pull
    pl = pull

    # push
    ps = push
    psf = push --force

    # rebase
    rb = rebase
    rba = rebase --abort
    rbc = rebase --continue
    rbf = rebase --interactive --autosquash

    # reset
    rs = reset
    rsk = reset --keep
    rsm = reset --mixed

    # restore
    rt = {{@@ restore @@}}

    # show
    sw = {{@@ "show --patch --stat --compact-summary --format='%s%%n'"
        | format(commit_display_format) @@}}

    # squash
    sq = {{@@ squash @@}}

    # status
    i = {{@@ info @@}}

    # stash
    s = stash

    # unadd
    ua = {{@@ unadd @@}}

    # unstash
    us = {{@@ unstash @@}}

    # update
    up = {{@@ update @@}}

[apply]
    ignoreWhitespace = false
    whitespace = fix

[blame]
    date = format:{{@@ date_format @@}}

{%@@ if git_commit_gpg_sign -@@%}

[commit]
    gpgsign = true

{%@@ endif -@@%}

[core]
    autocrlf = input
    editor = vim
    excludesfile = ~/.config/git/gitignore

{%@@ if git_credentials_helper -@@%}

[credential]
    helper = {{@@ git_credentials_helper @@}}

{%@@ endif -@@%}

[fetch]
    prune = true

{%@@ if gitreview_username -@@%}

[gitreview]
    username = {{@@ gitreview_username @@}}

{%@@ endif -@@%}

[help]
    autocorrect = 5

[log]
    date = format:{{@@ date_format @@}}

[merge]
    log = 1

[rebase]
    autoStash = true

[pull]
    rebase = true

[push]
    default = upstream

[tag]
    sort = -version:refname

{%@@ if not env['HOST'].startswith('work') -@@%}

[user]
    name = {{@@ full_name @@}}
    email = {{@@ email @@}}
    username = {{@@ git_username @@}}

{%@@ endif -@@%}
